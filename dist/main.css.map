{"version":3,"sources":["util/fonts.scss","globals/boilerplate.scss","main.css","globals/typography.scss","globals/layout.scss","util/breakpoints.scss"],"names":[],"mappings":"AACQ,8EAAA,CAIA,yFAAA,CCJR,KACI,qBAAA,CACA,cCEJ,CDCA,iBAGI,kBCEJ,CDCA,KAGI,gCDba,CCWb,QAAA,CACA,SCGJ,CCjBA,qBAGI,oBDoBJ,CEtBA,WAEI,aAAA,CAEA,mBAAA,CAKA,gBFmBJ,CGxBI,4BDJJ,WAMQ,SF0BN,CACF","file":"main.css","sourcesContent":["// Open Sans\n@import url('https://fonts.googleapis.com/css2?family=Open+Sans&display=swap');\n$font-open-sans: 'Open Sans',\nsans-serif;\n// Raleway\n@import url('https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap');\n$font-raleway: 'Raleway',\nsans-serif;","@use '../util' as *;\nhtml {\n    box-sizing: border-box;\n    font-size: 100%;\n}\n\n*,\n*::after,\n*::before {\n    box-sizing: inherit;\n}\n\nbody {\n    margin: 0;\n    padding: 0;\n    font-family: $font-open-sans;\n}","@import url(\"https://fonts.googleapis.com/css2?family=Open+Sans&display=swap\");\n@import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@400;700&display=swap\");\nhtml {\n  box-sizing: border-box;\n  font-size: 100%;\n}\n\n*,\n*::after,\n*::before {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: \"Open Sans\", sans-serif;\n}\n\na,\na:active,\na:visited {\n  text-decoration: none;\n}\n\n.container {\n  margin: 0 auto;\n  padding: 0 1.5625rem;\n  width: 80.3125rem;\n}\n@media (min-width: 71.875em) {\n  .container {\n    padding: 0;\n  }\n}","a,\na:active,\na:visited {\n    text-decoration: none;\n}","@use '../util' as *;\n.container {\n    // Centering Contents\n    margin: 0 auto;\n    // Mobile Design\n    padding: 0 rem(25);\n    @include breakpoint(large) {\n        padding: 0;\n    }\n    // Desktop Design\n    width: rem(1285);\n}","// 640px, 1150px, 1400px\n$breakpoints-up: ( 'medium': '40em', 'large': '71.875em', 'xlarge': '87.5em', );\n// 639px, 1149px, 1399px\n$breakpoints-down: ( 'small': '39.9375em', 'medium': '71.8125em', 'large': '87.4375em', );\n@mixin breakpoint($size) {\n    @media (min-width: map-get($breakpoints-up, $size)) {\n        @content;\n    }\n}\n\n@mixin breakpoint-down($size) {\n    @media (max-width: map-get($breakpoints-down, $size)) {\n        @content;\n    }\n}"]}